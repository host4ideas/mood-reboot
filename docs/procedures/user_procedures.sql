CREATE OR ALTER PROCEDURE SP_CREATE_USER
(@EMAIL NVARCHAR(255), @PASSWORD NVARCHAR(12), @USERNAME NVARCHAR(30), @IMAGE NVARCHAR(MAX) = '', @ROLE NVARCHAR(25) = 'USER', @LAST_SEEN DATETIME = '')
AS
	DECLARE @NEW_ID INT;
	SELECT @NEW_ID = (MAX([USER].[USER_ID]) + 1) FROM [USER];

	DECLARE @EXISTING_USERS INT;
	SELECT @EXISTING_USERS = COUNT([USER].[USER_ID]) FROM [USER] WHERE [EMAIL] = @EMAIL OR [USERNAME] = @USERNAME;

	--If the user exist return 0 (false)
	IF(@EXISTING_USERS > 0) BEGIN
		 RETURN 0;
	END
	--If the user doesn't exist return 1 (true)
	ELSE BEGIN
		INSERT INTO [USER] VALUES
		(@NEW_ID, @EMAIL, @PASSWORD, @USERNAME, GETDATE(), @IMAGE, @ROLE, @LAST_SEEN);

		RETURN 1
	END
GO

CREATE OR ALTER PROCEDURE SP_UPDATE_USER_USERNAME
(@EMAIL NVARCHAR(255) = '', @USERNAME NVARCHAR(30) = '', @NEW_USERNAME NVARCHAR(30))
AS
	UPDATE [USER] SET [USERNAME] = @NEW_USERNAME
	WHERE [USERNAME] = @USERNAME OR [EMAIL] = @EMAIL;
GO

CREATE OR ALTER PROCEDURE SP_UPDATE_USER_PASSWORD
(@EMAIL NVARCHAR(255) = '', @USERNAME NVARCHAR(30) = '', @PASSWORD NVARCHAR(12))
AS
	UPDATE [USER] SET [PASSWORD] = @PASSWORD
	WHERE [USERNAME] = @USERNAME OR [EMAIL] = @EMAIL;
GO

CREATE OR ALTER PROCEDURE SP_UPDATE_USER_LASTSEEN
(@EMAIL NVARCHAR(255) = '', @USERNAME NVARCHAR(30) = '', @LAST_SEEN DATETIME)
AS
	UPDATE [USER] SET [LAST_SEEN] = @LAST_SEEN
	WHERE [USERNAME] = @USERNAME OR [EMAIL] = @EMAIL;
GO

CREATE OR ALTER PROCEDURE SP_UPDATE_USER_EMAIL
(@EMAIL NVARCHAR(255), @USERNAME NVARCHAR(30), @NEW_EMAIL NVARCHAR(255))
AS
	UPDATE [USER] SET [EMAIL] = @NEW_EMAIL
	WHERE [USERNAME] = @USERNAME OR [EMAIL] = @EMAIL;
GO

CREATE OR ALTER PROCEDURE SP_UPDATE_USER_IMAGE
(@EMAIL NVARCHAR(255), @USERNAME NVARCHAR(30), @IMAGE NVARCHAR(MAX))
AS
	UPDATE [USER] SET [IMAGE] = @IMAGE
	WHERE [USERNAME] = @USERNAME OR [EMAIL] = @EMAIL;
GO

CREATE OR ALTER PROCEDURE SP_DELETE_USER
(@EMAIL NVARCHAR(255), @USERNAME NVARCHAR(30))
AS
	DELETE FROM [USER] WHERE EMAIL = @EMAIL AND USERNAME = @USERNAME;
GO
